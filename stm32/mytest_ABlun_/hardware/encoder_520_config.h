#ifndef ENCODER_520_CONFIG_H
#define ENCODER_520_CONFIG_H

#include "tim.h"

// ============================================================================
// 520编码器定时器配置声明
// ============================================================================
// 注意：以下定时器句柄需要在tim.c中定义，并在CubeMX中配置为编码器模式

// 定时器句柄声明(这些需要在tim.c中实际定义)
extern TIM_HandleTypeDef htim2;  // 编码器1定时器
extern TIM_HandleTypeDef htim4;  // 编码器2定时器
extern TIM_HandleTypeDef htim3;  // 编码器3定时器(可选，需要配置)
extern TIM_HandleTypeDef htim1;  // 编码器4定时器(可选，需要配置)

// ============================================================================
// 编码器引脚配置说明
// ============================================================================
/*
  编码器引脚配置说明(需要在CubeMX中设置):
  
  TIM2编码器模式:
  - PA0: TIM2_CH1 (编码器A相)
  - PA1: TIM2_CH2 (编码器B相)
  
  TIM4编码器模式:
  - PB6: TIM4_CH1 (编码器A相)  
  - PB7: TIM4_CH2 (编码器B相)
  
  可选配置(如需要4个编码器):
  TIM3编码器模式:
  - PA6: TIM3_CH1 (编码器A相)
  - PA7: TIM3_CH2 (编码器B相)
  
  TIM1编码器模式:
  - PA8: TIM1_CH1 (编码器A相)
  - PA9: TIM1_CH2 (编码器B相)
*/

// ============================================================================
// CubeMX配置指导
// ============================================================================
/*
  在STM32CubeMX中需要进行以下配置:
  
  1. 启用对应的定时器(TIM2, TIM4等)
  2. 将定时器模式设置为"Encoder Mode"
  3. 设置编码器参数:
     - EncoderMode: Encoder Mode TI1 and TI2
     - Counter Period: 65535 (16位定时器)
     - Prescaler: 0
  4. 配置对应的GPIO引脚为定时器功能
  5. 生成代码后确保tim.c中包含编码器初始化代码
*/

#endif /* ENCODER_520_CONFIG_H */ 